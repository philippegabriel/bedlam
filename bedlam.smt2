(set-logic QF_BV)
(set-info :smt-lib-version 2.0)
(set-info :status sat)  
(declare-fun Blu0xyz () (_ BitVec 5 ))
(declare-fun Blu1xyz () (_ BitVec 5  ))
(declare-fun Blu2xyz () (_ BitVec 5  ))
(declare-fun Blu3xyz () (_ BitVec 5  ))
(declare-fun Wte0xyz () (_ BitVec 5  ))
(declare-fun Wte1xyz () (_ BitVec 5  ))
(declare-fun Wte2xyz () (_ BitVec 5  ))
(declare-fun Wte3xyz () (_ BitVec 5  ))
(declare-fun Wte4xyz () (_ BitVec 5  ))
(declare-fun Red0xyz () (_ BitVec 5  ))
(declare-fun Red1xyz () (_ BitVec 5  ))
(declare-fun Red2xyz () (_ BitVec 5  ))
(declare-fun Red3xyz () (_ BitVec 5  ))
(declare-fun Blu0shr () (_ BitVec 100  ))
(declare-fun Blu1shr () (_ BitVec 100  ))
(declare-fun Blu2shr () (_ BitVec 100  ))
(declare-fun Blu3shr () (_ BitVec 100  ))
(declare-fun Wte0shr () (_ BitVec 100  ))
(declare-fun Wte1shr () (_ BitVec 100  ))
(declare-fun Wte2shr () (_ BitVec 100  ))
(declare-fun Wte3shr () (_ BitVec 100  ))
(declare-fun Wte4shr () (_ BitVec 100  ))
(declare-fun Red0shr () (_ BitVec 100  ))
(declare-fun Red1shr () (_ BitVec 100  ))
(declare-fun Red2shr () (_ BitVec 100  ))
(declare-fun Red3shr () (_ BitVec 100  ))

;Shift coeficient is within grid
(assert (bvule Blu0shr (_ bv100 100)))
(assert (bvule Blu1shr (_ bv100 100)))
(assert (bvule Blu2shr (_ bv100 100)))
(assert (bvule Blu3shr (_ bv100 100)))
(assert (bvule Wte0shr (_ bv100 100)))
(assert (bvule Wte1shr (_ bv100 100)))
(assert (bvule Wte2shr (_ bv100 100)))
(assert (bvule Wte3shr (_ bv100 100)))
(assert (bvule Wte4shr (_ bv100 100)))
(assert (bvule Red0shr (_ bv100 100)))
(assert (bvule Red1shr (_ bv100 100)))
(assert (bvule Red2shr (_ bv100 100)))
(assert (bvule Red3shr (_ bv100 100)))

;Orientation is within 0..23 or 0..12 or 0..2
(assert (bvule Blu0xyz (_ bv24 5 )))
(assert (bvule Blu1xyz (_ bv24 5 )))
(assert (bvule Blu2xyz (_ bv24 5 )))
(assert (bvule Blu3xyz (_ bv12 5 )))
(assert (bvule Wte0xyz (_ bv5 5 )))
(assert (bvule Wte1xyz (_ bv5 5 )))
(assert (bvule Wte2xyz (_ bv5 5 )))
(assert (bvule Wte3xyz (_ bv5 5 )))
(assert (bvule Wte4xyz (_ bv5 5 )))
(assert (bvule Red0xyz (_ bv24 5 )))
(assert (bvule Red1xyz (_ bv3 5 )))
(assert (bvule Red2xyz (_ bv24 5 )))
(assert (bvule Red3xyz (_ bv24 5 )))
(assert (bvuge Blu0xyz (_ bv0 5 )))
(assert (bvuge Blu1xyz (_ bv0 5 )))
(assert (bvuge Blu2xyz (_ bv0 5 )))
(assert (bvuge Blu3xyz (_ bv0 5 )))
(assert (bvuge Wte0xyz (_ bv0 5 )))
(assert (bvuge Wte1xyz (_ bv0 5 )))
(assert (bvuge Wte2xyz (_ bv0 5 )))
(assert (bvuge Wte3xyz (_ bv0 5 )))
(assert (bvuge Wte4xyz (_ bv0 5 )))
(assert (bvuge Red0xyz (_ bv0 5 )))
(assert (bvuge Red1xyz (_ bv0 5 )))
(assert (bvuge Red2xyz (_ bv0 5 )))
(assert (bvuge Red3xyz (_ bv0 5 )))

;
;Define the grid
;
(define-fun empty () (_ BitVec 100)  (_ bv0 100 ))
(define-fun fullGrid () (_ BitVec 100) #b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111)
(define-fun grid () (_ BitVec 100) #b0000100001000010000111111000010000100001000011111100001000010000100001111110000100001000010000111111)

;
;Define the 12 pieces in 231 total orientation
;
(define-fun Blu0_0 () (_ BitVec 100) #b0000000000100000000000000100001000010000000000000000000100000000000000000000000000000000000000000000)
(define-fun Blu0_1 () (_ BitVec 100) #b0000010000000000000000000000001000010000000000000010000100000000000000000000000000000000000000000000)
(define-fun Blu0_2 () (_ BitVec 100) #b0000010000000000000000000100001000000000000000000000000100001000000000000000000000000000000000000000)
(define-fun Blu0_3 () (_ BitVec 100) #b0000010000000000000000000100001000010000000000000000000000001000000000000000000000000000000000000000)
(define-fun Blu0_4 () (_ BitVec 100) #b0000010000000000000000000100001000010000000000000010000000000000000000000000000000000000000000000000)
(define-fun Blu0_5 () (_ BitVec 100) #b0000010000100000000000000100001000000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Blu0_6 () (_ BitVec 100) #b0010000000000000000000000111000000000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Blu0_7 () (_ BitVec 100) #b0010011100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu0_8 () (_ BitVec 100) #b0100000000000000000000000011000000000000000000000011000000000000000000000000000000000000000000000000)
(define-fun Blu0_9 () (_ BitVec 100) #b0100000000000000000000000110000000000000000000000001100000000000000000000000000000000000000000000000)
(define-fun Blu0_10 () (_ BitVec 100) #b0100000000000000000000000111000000000000000000000000100000000000000000000000000000000000000000000000)
(define-fun Blu0_11 () (_ BitVec 100) #b0100000000000000000000000111000000000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Blu0_12 () (_ BitVec 100) #b0100001100110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu0_13 () (_ BitVec 100) #b0100011000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu0_14 () (_ BitVec 100) #b0100011100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu0_15 () (_ BitVec 100) #b0100011100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu0_16 () (_ BitVec 100) #b0110000000000000000000000110000000000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Blu0_17 () (_ BitVec 100) #b0110011000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu0_18 () (_ BitVec 100) #b1000000000000000000000000100001000010000000000000000000100000000000000000000000000000000000000000000)
(define-fun Blu0_19 () (_ BitVec 100) #b1000000000000000000000000111000000000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Blu0_20 () (_ BitVec 100) #b1000010000000000000000000000001000010000000000000000000100000000000000000000000000000000000000000000)
(define-fun Blu0_21 () (_ BitVec 100) #b1000011100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu0_22 () (_ BitVec 100) #b1100000000000000000000000011000000000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Blu0_23 () (_ BitVec 100) #b1100001100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_0 () (_ BitVec 100) #b0000001000000000000000000100001100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Blu1_1 () (_ BitVec 100) #b0000001000000000000000000100001100010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_2 () (_ BitVec 100) #b0000001000000000000000000110000100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Blu1_3 () (_ BitVec 100) #b0000001000000000000000000111000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_4 () (_ BitVec 100) #b0000010000000000000000000010001100000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Blu1_5 () (_ BitVec 100) #b0000010000000000000000000010001100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_6 () (_ BitVec 100) #b0000010000000000000000000110001000000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Blu1_7 () (_ BitVec 100) #b0000011000000000000000000010000100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_8 () (_ BitVec 100) #b0000011000000000000000000100001000010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_9 () (_ BitVec 100) #b0000011100000000000000000010000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_10 () (_ BitVec 100) #b0100000000000000000000000010001100000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Blu1_11 () (_ BitVec 100) #b0100000000000000000000000010001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_12 () (_ BitVec 100) #b0100000000000000000000000110001000000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Blu1_13 () (_ BitVec 100) #b0100001000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_14 () (_ BitVec 100) #b0100001000000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_15 () (_ BitVec 100) #b0100001000010000000000000000001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_16 () (_ BitVec 100) #b0100011000010000000000000000001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_17 () (_ BitVec 100) #b0100011100000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_18 () (_ BitVec 100) #b1000000000000000000000000100001100000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Blu1_19 () (_ BitVec 100) #b1000000000000000000000000110000100000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Blu1_20 () (_ BitVec 100) #b1000010000100000000000000000001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_21 () (_ BitVec 100) #b1000011000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_22 () (_ BitVec 100) #b1110000000000000000000000010000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu1_23 () (_ BitVec 100) #b1110001000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_0 () (_ BitVec 100) #b0000000000100000000000000100001100010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_1 () (_ BitVec 100) #b0000000100000000000000000010001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_2 () (_ BitVec 100) #b0000001000000000000000000000001100000000000000000001000010000000000000000000000000000000000000000000)
(define-fun Blu2_3 () (_ BitVec 100) #b0000001000000000000000000010000100011000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_4 () (_ BitVec 100) #b0000001000000000000000000100001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_5 () (_ BitVec 100) #b0000010000000000000000000100001000000000000000000000000110000000000000000000000000000000000000000000)
(define-fun Blu2_6 () (_ BitVec 100) #b0000010000000000000000000110001000010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_7 () (_ BitVec 100) #b0000011000000000000000000010000100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Blu2_8 () (_ BitVec 100) #b0010011100000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_9 () (_ BitVec 100) #b0100000000000000000000000010000100000000000000000011000000000000000000000000000000000000000000000000)
(define-fun Blu2_10 () (_ BitVec 100) #b0100000000000000000000000010001100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_11 () (_ BitVec 100) #b0100000000000000000000000111000010000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_12 () (_ BitVec 100) #b0100001000000000000000000110000000000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Blu2_13 () (_ BitVec 100) #b0100011000010000000000000000000000001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_14 () (_ BitVec 100) #b0100011100000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_15 () (_ BitVec 100) #b1000000000000000000000000110000000000000000000000010000100000000000000000000000000000000000000000000)
(define-fun Blu2_16 () (_ BitVec 100) #b1000000000000000000000000111000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_17 () (_ BitVec 100) #b1000010000000000000000000000001100000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Blu2_18 () (_ BitVec 100) #b1000010000110000000000000000001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_19 () (_ BitVec 100) #b1000011000100000000000000100000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_20 () (_ BitVec 100) #b1100000000000000000000000100001000000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Blu2_21 () (_ BitVec 100) #b1100001000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_22 () (_ BitVec 100) #b1110001000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu2_23 () (_ BitVec 100) #b1110010000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu3_0 () (_ BitVec 100) #b0000001000000000000000000110000100000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Blu3_1 () (_ BitVec 100) #b0000001100000000000000000110000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu3_2 () (_ BitVec 100) #b0000010000000000000000000010001100000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Blu3_3 () (_ BitVec 100) #b0000010000100000000000000010001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu3_4 () (_ BitVec 100) #b0000011000010000000000000100001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu3_5 () (_ BitVec 100) #b0100000000000000000000000110001000000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Blu3_6 () (_ BitVec 100) #b0100001000000000000000000000001100010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu3_7 () (_ BitVec 100) #b0100011000000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu3_8 () (_ BitVec 100) #b0110001000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu3_9 () (_ BitVec 100) #b1000000000000000000000000100001100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Blu3_10 () (_ BitVec 100) #b1000011000000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Blu3_11 () (_ BitVec 100) #b1100000000000000000000000010000110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_0 () (_ BitVec 100) #b0000000000010000000000000010000100011000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_1 () (_ BitVec 100) #b0000000000100000000000000100001000011000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_2 () (_ BitVec 100) #b0000000100000000000000000001001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_3 () (_ BitVec 100) #b0000001000000000000000000000000100000000000000000001000110000000000000000000000000000000000000000000)
(define-fun Red0_4 () (_ BitVec 100) #b0000010000000000000000000000001000000000000000000010000110000000000000000000000000000000000000000000)
(define-fun Red0_5 () (_ BitVec 100) #b0000010000000000000000000100001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_6 () (_ BitVec 100) #b0010000000000000000000000111000010000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_7 () (_ BitVec 100) #b0010011100000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_8 () (_ BitVec 100) #b0100000000000000000000000010000000000000000000000011000010000000000000000000000000000000000000000000)
(define-fun Red0_9 () (_ BitVec 100) #b0100000000000000000000000110000100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_10 () (_ BitVec 100) #b0100001000110000000000000000000000001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_11 () (_ BitVec 100) #b0100011000000000000000000000000100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Red0_12 () (_ BitVec 100) #b1000000000000000000000000100000000000000000000000011000100000000000000000000000000000000000000000000)
(define-fun Red0_13 () (_ BitVec 100) #b1000000000000000000000000110001000010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_14 () (_ BitVec 100) #b1000000000000000000000000111001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_15 () (_ BitVec 100) #b1000010000110000000000000000000000010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_16 () (_ BitVec 100) #b1000011000000000000000000000001000000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Red0_17 () (_ BitVec 100) #b1000011100000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_18 () (_ BitVec 100) #b1100001000000000000000000010000000000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Red0_19 () (_ BitVec 100) #b1100001000010000000000000010000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_20 () (_ BitVec 100) #b1100010000000000000000000100000000000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Red0_21 () (_ BitVec 100) #b1100010000100000000000000100000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_22 () (_ BitVec 100) #b1110000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red0_23 () (_ BitVec 100) #b1110010000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red1_0 () (_ BitVec 100) #b0000010000000000000000000100001000010000000000000000000100000000000000000000000000000000000000000000)
(define-fun Red1_1 () (_ BitVec 100) #b0100000000000000000000000111000000000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Red1_2 () (_ BitVec 100) #b0100011100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_0 () (_ BitVec 100) #b0000000000100000000000000010001100010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_1 () (_ BitVec 100) #b0000000100000000000000000110000110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_2 () (_ BitVec 100) #b0000001000000000000000000010000100000000000000000011000000000000000000000000000000000000000000000000)
(define-fun Red2_3 () (_ BitVec 100) #b0000001100000000000000000100001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_4 () (_ BitVec 100) #b0000010000000000000000000000001100000000000000000001000010000000000000000000000000000000000000000000)
(define-fun Red2_5 () (_ BitVec 100) #b0000010000100000000000000110001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_6 () (_ BitVec 100) #b0000010000110000000000000100001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_7 () (_ BitVec 100) #b0000011000000000000000000010000100000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Red2_8 () (_ BitVec 100) #b0010001100000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_9 () (_ BitVec 100) #b0100000000000000000000000010001100010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_10 () (_ BitVec 100) #b0100000000000000000000000110000000000000000000000010000100000000000000000000000000000000000000000000)
(define-fun Red2_11 () (_ BitVec 100) #b0100001000000000000000000000000100011000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_12 () (_ BitVec 100) #b0100001000000000000000000110000000000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Red2_13 () (_ BitVec 100) #b0110011000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_14 () (_ BitVec 100) #b0110011000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_15 () (_ BitVec 100) #b1000000000000000000000000100001000000000000000000000000110000000000000000000000000000000000000000000)
(define-fun Red2_16 () (_ BitVec 100) #b1000000000000000000000000110000110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_17 () (_ BitVec 100) #b1000010000000000000000000000001100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Red2_18 () (_ BitVec 100) #b1000011000010000000000000000000000001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_19 () (_ BitVec 100) #b1000011000010000000000000100000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_20 () (_ BitVec 100) #b1100000000000000000000000011000010000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_21 () (_ BitVec 100) #b1100000000000000000000000100001000000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Red2_22 () (_ BitVec 100) #b1100001000000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red2_23 () (_ BitVec 100) #b1100010000000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_0 () (_ BitVec 100) #b0000001000000000000000000010001100000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Red3_1 () (_ BitVec 100) #b0000001000000000000000000010001100010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_2 () (_ BitVec 100) #b0000001000000000000000000110000100000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Red3_3 () (_ BitVec 100) #b0000001000000000000000000110000110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_4 () (_ BitVec 100) #b0000001100000000000000000010001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_5 () (_ BitVec 100) #b0000010000000000000000000010001100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Red3_6 () (_ BitVec 100) #b0000010000000000000000000010001100010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_7 () (_ BitVec 100) #b0000010000000000000000000100001100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Red3_8 () (_ BitVec 100) #b0000010000100000000000000100001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_9 () (_ BitVec 100) #b0000011000100000000000000100001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_10 () (_ BitVec 100) #b0100000000000000000000000110000100000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Red3_11 () (_ BitVec 100) #b0100000000000000000000000110000110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_12 () (_ BitVec 100) #b0100000000000000000000000110001000000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Red3_13 () (_ BitVec 100) #b0100001000000000000000000000001100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_14 () (_ BitVec 100) #b0100001100000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_15 () (_ BitVec 100) #b0100011000000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_16 () (_ BitVec 100) #b0110011000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_17 () (_ BitVec 100) #b0110011000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_18 () (_ BitVec 100) #b1000000000000000000000000100001100000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Red3_19 () (_ BitVec 100) #b1000000000000000000000000110001000000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Red3_20 () (_ BitVec 100) #b1000011000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_21 () (_ BitVec 100) #b1000011000010000000000000000001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_22 () (_ BitVec 100) #b1100000000000000000000000011000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Red3_23 () (_ BitVec 100) #b1100001000000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte0_0 () (_ BitVec 100) #b0000000000100000000000000000001000010000000000000010000100000000000000000000000000000000000000000000)
(define-fun Wte0_1 () (_ BitVec 100) #b0000010000100000000000000100001000000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Wte0_2 () (_ BitVec 100) #b0010000000000000000000000011000000000000000000000011000000000000000000000000000000000000000000000000)
(define-fun Wte0_3 () (_ BitVec 100) #b0010001100110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte0_4 () (_ BitVec 100) #b0110000000000000000000000110000000000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Wte0_5 () (_ BitVec 100) #b0110011000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte0_6 () (_ BitVec 100) #b1000000000000000000000000100001000000000000000000000000100001000000000000000000000000000000000000000)
(define-fun Wte0_7 () (_ BitVec 100) #b1000000000000000000000000110000000000000000000000001100000000000000000000000000000000000000000000000)
(define-fun Wte0_8 () (_ BitVec 100) #b1000010000000000000000000000001000010000000000000000000000001000000000000000000000000000000000000000)
(define-fun Wte0_9 () (_ BitVec 100) #b1000011000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte0_10 () (_ BitVec 100) #b1100000000000000000000000011000000000000000000000000100000000000000000000000000000000000000000000000)
(define-fun Wte0_11 () (_ BitVec 100) #b1100001100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte1_0 () (_ BitVec 100) #b0000001000000000000000000010001100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Wte1_1 () (_ BitVec 100) #b0000001000000000000000000010001100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte1_2 () (_ BitVec 100) #b0000001000000000000000000010001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte1_3 () (_ BitVec 100) #b0000010000000000000000000100001100000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Wte1_4 () (_ BitVec 100) #b0000010000000000000000000100001100010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte1_5 () (_ BitVec 100) #b0100000000000000000000000110000100000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Wte1_6 () (_ BitVec 100) #b0100000000000000000000000111000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte1_7 () (_ BitVec 100) #b0100011000010000000000000000000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte1_8 () (_ BitVec 100) #b0100011100000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte1_9 () (_ BitVec 100) #b1000000000000000000000000110001000000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Wte1_10 () (_ BitVec 100) #b1000011000100000000000000000001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte1_11 () (_ BitVec 100) #b1110001000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_0 () (_ BitVec 100) #b0000001000000000000000000110000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_1 () (_ BitVec 100) #b0000010000000000000000000010001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_2 () (_ BitVec 100) #b0000011000000000000000000100001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_3 () (_ BitVec 100) #b0100000000000000000000000110001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_4 () (_ BitVec 100) #b0100001000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_5 () (_ BitVec 100) #b0100011000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_6 () (_ BitVec 100) #b1000000000000000000000000100001100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_7 () (_ BitVec 100) #b1000010000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_8 () (_ BitVec 100) #b1000011000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_9 () (_ BitVec 100) #b1100000000000000000000000010000100000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_10 () (_ BitVec 100) #b1100001000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte2_11 () (_ BitVec 100) #b1100010000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_0 () (_ BitVec 100) #b0000000000010000000000000100001000011000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_1 () (_ BitVec 100) #b0000000000110000000000000010000100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_2 () (_ BitVec 100) #b0000001000000000000000000000000100000000000000000010000110000000000000000000000000000000000000000000)
(define-fun Wte3_3 () (_ BitVec 100) #b0000010000000000000000000000001000000000000000000011000100000000000000000000000000000000000000000000)
(define-fun Wte3_4 () (_ BitVec 100) #b0000010000000000000000000111001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_5 () (_ BitVec 100) #b0000011100000000000000000001000010000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_6 () (_ BitVec 100) #b0010000000000000000000000001001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_7 () (_ BitVec 100) #b0010000100000000000000000111000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_8 () (_ BitVec 100) #b0100000000000000000000000010000000000000000000000001000110000000000000000000000000000000000000000000)
(define-fun Wte3_9 () (_ BitVec 100) #b0100001000010000000000000110000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_10 () (_ BitVec 100) #b0100001000110000000000000000000000010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_11 () (_ BitVec 100) #b0100011000000000000000000000001000000000000000000000000100000000000000000000000000000000000000000000)
(define-fun Wte3_12 () (_ BitVec 100) #b1000000000000000000000000100000000000000000000000011000010000000000000000000000000000000000000000000)
(define-fun Wte3_13 () (_ BitVec 100) #b1000000000000000000000000110000100001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_14 () (_ BitVec 100) #b1000010000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_15 () (_ BitVec 100) #b1000010000100000000000000000000000011000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_16 () (_ BitVec 100) #b1000011000000000000000000100000000000000000000000010000000000000000000000000000000000000000000000000)
(define-fun Wte3_17 () (_ BitVec 100) #b1000011100000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_18 () (_ BitVec 100) #b1100000000000000000000000100001000010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_19 () (_ BitVec 100) #b1100001000000000000000000000000100000000000000000000000010000000000000000000000000000000000000000000)
(define-fun Wte3_20 () (_ BitVec 100) #b1100010000000000000000000010000000000000000000000001000000000000000000000000000000000000000000000000)
(define-fun Wte3_21 () (_ BitVec 100) #b1100010000100000000000000010000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_22 () (_ BitVec 100) #b1110000000000000000000000100001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte3_23 () (_ BitVec 100) #b1110000100000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte4_0 () (_ BitVec 100) #b0000000000100000000000000110001000010000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte4_1 () (_ BitVec 100) #b0000000100000000000000000100001110000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte4_2 () (_ BitVec 100) #b0000011000000000000000000000000100000000000000000001000010000000000000000000000000000000000000000000)
(define-fun Wte4_3 () (_ BitVec 100) #b0010011100000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte4_4 () (_ BitVec 100) #b0100000000000000000000000010000100011000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte4_5 () (_ BitVec 100) #b0100001000000000000000000010000000000000000000000011000000000000000000000000000000000000000000000000)
(define-fun Wte4_6 () (_ BitVec 100) #b1000000000000000000000000111000010000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte4_7 () (_ BitVec 100) #b1000010000000000000000000000001000000000000000000000000110000000000000000000000000000000000000000000)
(define-fun Wte4_8 () (_ BitVec 100) #b1000010000110000000000000100000000000000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte4_9 () (_ BitVec 100) #b1100000000000000000000000100000000000000000000000010000100000000000000000000000000000000000000000000)
(define-fun Wte4_10 () (_ BitVec 100) #b1100001000010000000000000000000000001000000000000000000000000000000000000000000000000000000000000000)
(define-fun Wte4_11 () (_ BitVec 100) #b1110010000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000)


;
;Define a formula to pick the orientation
;
;Pick Blu0
(define-fun Blu0 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Blu0_0
	(ite (= x (_ bv1 5)) Blu0_1
	(ite (= x (_ bv2 5)) Blu0_2
	(ite (= x (_ bv3 5)) Blu0_3
	(ite (= x (_ bv4 5)) Blu0_4
	(ite (= x (_ bv5 5)) Blu0_5
	(ite (= x (_ bv6 5)) Blu0_6
	(ite (= x (_ bv7 5)) Blu0_7
	(ite (= x (_ bv8 5)) Blu0_8
	(ite (= x (_ bv9 5)) Blu0_9
	(ite (= x (_ bv10 5)) Blu0_10
	(ite (= x (_ bv11 5)) Blu0_11
	(ite (= x (_ bv12 5)) Blu0_12
	(ite (= x (_ bv13 5)) Blu0_13
	(ite (= x (_ bv14 5)) Blu0_14
	(ite (= x (_ bv15 5)) Blu0_15
	(ite (= x (_ bv16 5)) Blu0_16
	(ite (= x (_ bv17 5)) Blu0_17
	(ite (= x (_ bv18 5)) Blu0_18
	(ite (= x (_ bv19 5)) Blu0_19
	(ite (= x (_ bv20 5)) Blu0_20
	(ite (= x (_ bv21 5)) Blu0_21
	(ite (= x (_ bv22 5)) Blu0_22
	(ite (= x (_ bv23 5)) Blu0_23 empty
))))))))))))))))))))))))
)
;Pick Blu1
(define-fun Blu1 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Blu1_0
	(ite (= x (_ bv1 5)) Blu1_1
	(ite (= x (_ bv2 5)) Blu1_2
	(ite (= x (_ bv3 5)) Blu1_3
	(ite (= x (_ bv4 5)) Blu1_4
	(ite (= x (_ bv5 5)) Blu1_5
	(ite (= x (_ bv6 5)) Blu1_6
	(ite (= x (_ bv7 5)) Blu1_7
	(ite (= x (_ bv8 5)) Blu1_8
	(ite (= x (_ bv9 5)) Blu1_9
	(ite (= x (_ bv10 5)) Blu1_10
	(ite (= x (_ bv11 5)) Blu1_11
	(ite (= x (_ bv12 5)) Blu1_12
	(ite (= x (_ bv13 5)) Blu1_13
	(ite (= x (_ bv14 5)) Blu1_14
	(ite (= x (_ bv15 5)) Blu1_15
	(ite (= x (_ bv16 5)) Blu1_16
	(ite (= x (_ bv17 5)) Blu1_17
	(ite (= x (_ bv18 5)) Blu1_18
	(ite (= x (_ bv19 5)) Blu1_19
	(ite (= x (_ bv20 5)) Blu1_20
	(ite (= x (_ bv21 5)) Blu1_21
	(ite (= x (_ bv22 5)) Blu1_22
	(ite (= x (_ bv23 5)) Blu1_23 empty
))))))))))))))))))))))))
)
;Pick Blu2
(define-fun Blu2 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Blu2_0
	(ite (= x (_ bv1 5)) Blu2_1
	(ite (= x (_ bv2 5)) Blu2_2
	(ite (= x (_ bv3 5)) Blu2_3
	(ite (= x (_ bv4 5)) Blu2_4
	(ite (= x (_ bv5 5)) Blu2_5
	(ite (= x (_ bv6 5)) Blu2_6
	(ite (= x (_ bv7 5)) Blu2_7
	(ite (= x (_ bv8 5)) Blu2_8
	(ite (= x (_ bv9 5)) Blu2_9
	(ite (= x (_ bv10 5)) Blu2_10
	(ite (= x (_ bv11 5)) Blu2_11
	(ite (= x (_ bv12 5)) Blu2_12
	(ite (= x (_ bv13 5)) Blu2_13
	(ite (= x (_ bv14 5)) Blu2_14
	(ite (= x (_ bv15 5)) Blu2_15
	(ite (= x (_ bv16 5)) Blu2_16
	(ite (= x (_ bv17 5)) Blu2_17
	(ite (= x (_ bv18 5)) Blu2_18
	(ite (= x (_ bv19 5)) Blu2_19
	(ite (= x (_ bv20 5)) Blu2_20
	(ite (= x (_ bv21 5)) Blu2_21
	(ite (= x (_ bv22 5)) Blu2_22
	(ite (= x (_ bv23 5)) Blu2_23 empty
))))))))))))))))))))))))
)
;Pick Blu3
(define-fun Blu3 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Blu3_0
	(ite (= x (_ bv1 5)) Blu3_1
	(ite (= x (_ bv2 5)) Blu3_2
	(ite (= x (_ bv3 5)) Blu3_3
	(ite (= x (_ bv4 5)) Blu3_4
	(ite (= x (_ bv5 5)) Blu3_5
	(ite (= x (_ bv6 5)) Blu3_6
	(ite (= x (_ bv7 5)) Blu3_7
	(ite (= x (_ bv8 5)) Blu3_8
	(ite (= x (_ bv9 5)) Blu3_9
	(ite (= x (_ bv10 5)) Blu3_10
	(ite (= x (_ bv11 5)) Blu3_11 empty
))))))))))))
)
;Pick Wte0
(define-fun Wte0 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Wte0_0
	(ite (= x (_ bv1 5)) Wte0_1
	(ite (= x (_ bv2 5)) Wte0_2
	(ite (= x (_ bv3 5)) Wte0_3
	(ite (= x (_ bv4 5)) Wte0_4
	(ite (= x (_ bv5 5)) Wte0_5
	(ite (= x (_ bv6 5)) Wte0_6
	(ite (= x (_ bv7 5)) Wte0_7
	(ite (= x (_ bv8 5)) Wte0_8
	(ite (= x (_ bv9 5)) Wte0_9
	(ite (= x (_ bv10 5)) Wte0_10
	(ite (= x (_ bv11 5)) Wte0_11 empty
))))))))))))
)
;Pick Wte1
(define-fun Wte1 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Wte1_0
	(ite (= x (_ bv1 5)) Wte1_1
	(ite (= x (_ bv2 5)) Wte1_2
	(ite (= x (_ bv3 5)) Wte1_3
	(ite (= x (_ bv4 5)) Wte1_4
	(ite (= x (_ bv5 5)) Wte1_5
	(ite (= x (_ bv6 5)) Wte1_6
	(ite (= x (_ bv7 5)) Wte1_7
	(ite (= x (_ bv8 5)) Wte1_8
	(ite (= x (_ bv9 5)) Wte1_9
	(ite (= x (_ bv10 5)) Wte1_10
	(ite (= x (_ bv11 5)) Wte1_11 empty
))))))))))))
)
;Pick Wte2
(define-fun Wte2 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Wte2_0
	(ite (= x (_ bv1 5)) Wte2_1
	(ite (= x (_ bv2 5)) Wte2_2
	(ite (= x (_ bv3 5)) Wte2_3
	(ite (= x (_ bv4 5)) Wte2_4
	(ite (= x (_ bv5 5)) Wte2_5
	(ite (= x (_ bv6 5)) Wte2_6
	(ite (= x (_ bv7 5)) Wte2_7
	(ite (= x (_ bv8 5)) Wte2_8
	(ite (= x (_ bv9 5)) Wte2_9
	(ite (= x (_ bv10 5)) Wte2_10
	(ite (= x (_ bv11 5)) Wte2_11 empty
))))))))))))
)
;Pick Wte3
(define-fun Wte3 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Wte3_0
	(ite (= x (_ bv1 5)) Wte3_1
	(ite (= x (_ bv2 5)) Wte3_2
	(ite (= x (_ bv3 5)) Wte3_3
	(ite (= x (_ bv4 5)) Wte3_4
	(ite (= x (_ bv5 5)) Wte3_5
	(ite (= x (_ bv6 5)) Wte3_6
	(ite (= x (_ bv7 5)) Wte3_7
	(ite (= x (_ bv8 5)) Wte3_8
	(ite (= x (_ bv9 5)) Wte3_9
	(ite (= x (_ bv10 5)) Wte3_10
	(ite (= x (_ bv11 5)) Wte3_11
	(ite (= x (_ bv12 5)) Wte3_12
	(ite (= x (_ bv13 5)) Wte3_13
	(ite (= x (_ bv14 5)) Wte3_14
	(ite (= x (_ bv15 5)) Wte3_15
	(ite (= x (_ bv16 5)) Wte3_16
	(ite (= x (_ bv17 5)) Wte3_17
	(ite (= x (_ bv18 5)) Wte3_18
	(ite (= x (_ bv19 5)) Wte3_19
	(ite (= x (_ bv20 5)) Wte3_20
	(ite (= x (_ bv21 5)) Wte3_21
	(ite (= x (_ bv22 5)) Wte3_22
	(ite (= x (_ bv23 5)) Wte3_23 empty
))))))))))))))))))))))))
)
;Pick Wte4
(define-fun Wte4 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Wte4_0
	(ite (= x (_ bv1 5)) Wte4_1
	(ite (= x (_ bv2 5)) Wte4_2
	(ite (= x (_ bv3 5)) Wte4_3
	(ite (= x (_ bv4 5)) Wte4_4
	(ite (= x (_ bv5 5)) Wte4_5
	(ite (= x (_ bv6 5)) Wte4_6
	(ite (= x (_ bv7 5)) Wte4_7
	(ite (= x (_ bv8 5)) Wte4_8
	(ite (= x (_ bv9 5)) Wte4_9
	(ite (= x (_ bv10 5)) Wte4_10
	(ite (= x (_ bv11 5)) Wte4_11 empty
))))))))))))
)
(define-fun Red0 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Red0_0
	(ite (= x (_ bv1 5)) Red0_1
	(ite (= x (_ bv2 5)) Red0_2
	(ite (= x (_ bv3 5)) Red0_3
	(ite (= x (_ bv4 5)) Red0_4
	(ite (= x (_ bv5 5)) Red0_5
	(ite (= x (_ bv6 5)) Red0_6
	(ite (= x (_ bv7 5)) Red0_7
	(ite (= x (_ bv8 5)) Red0_8
	(ite (= x (_ bv9 5)) Red0_9
	(ite (= x (_ bv10 5)) Red0_10
	(ite (= x (_ bv11 5)) Red0_11
	(ite (= x (_ bv12 5)) Red0_12
	(ite (= x (_ bv13 5)) Red0_13
	(ite (= x (_ bv14 5)) Red0_14
	(ite (= x (_ bv15 5)) Red0_15
	(ite (= x (_ bv16 5)) Red0_16
	(ite (= x (_ bv17 5)) Red0_17
	(ite (= x (_ bv18 5)) Red0_18
	(ite (= x (_ bv19 5)) Red0_19
	(ite (= x (_ bv20 5)) Red0_20
	(ite (= x (_ bv21 5)) Red0_21
	(ite (= x (_ bv22 5)) Red0_22
	(ite (= x (_ bv23 5)) Red0_23 empty
))))))))))))))))))))))))
)
(define-fun Red1 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Red1_0
	(ite (= x (_ bv1 5)) Red1_1
	(ite (= x (_ bv2 5)) Red1_2 empty
)))
)
(define-fun Red2 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Red2_0
	(ite (= x (_ bv1 5)) Red2_1
	(ite (= x (_ bv2 5)) Red2_2
	(ite (= x (_ bv3 5)) Red2_3
	(ite (= x (_ bv4 5)) Red2_4
	(ite (= x (_ bv5 5)) Red2_5
	(ite (= x (_ bv6 5)) Red2_6
	(ite (= x (_ bv7 5)) Red2_7
	(ite (= x (_ bv8 5)) Red2_8
	(ite (= x (_ bv9 5)) Red2_9
	(ite (= x (_ bv10 5)) Red2_10
	(ite (= x (_ bv11 5)) Red2_11
	(ite (= x (_ bv12 5)) Red2_12
	(ite (= x (_ bv13 5)) Red2_13
	(ite (= x (_ bv14 5)) Red2_14
	(ite (= x (_ bv15 5)) Red2_15
	(ite (= x (_ bv16 5)) Red2_16
	(ite (= x (_ bv17 5)) Red2_17
	(ite (= x (_ bv18 5)) Red2_18
	(ite (= x (_ bv19 5)) Red2_19
	(ite (= x (_ bv20 5)) Red2_20
	(ite (= x (_ bv21 5)) Red2_21
	(ite (= x (_ bv22 5)) Red2_22
	(ite (= x (_ bv23 5)) Red2_23 empty
))))))))))))))))))))))))
)
(define-fun Red3 ((x (_ BitVec 5))) (_ BitVec 100) 
	(ite (= x (_ bv0 5)) Red3_0
	(ite (= x (_ bv1 5)) Red3_1
	(ite (= x (_ bv2 5)) Red3_2
	(ite (= x (_ bv3 5)) Red3_3
	(ite (= x (_ bv4 5)) Red3_4
	(ite (= x (_ bv5 5)) Red3_5
	(ite (= x (_ bv6 5)) Red3_6
	(ite (= x (_ bv7 5)) Red3_7
	(ite (= x (_ bv8 5)) Red3_8
	(ite (= x (_ bv9 5)) Red3_9
	(ite (= x (_ bv10 5)) Red3_10
	(ite (= x (_ bv11 5)) Red3_11
	(ite (= x (_ bv12 5)) Red3_12
	(ite (= x (_ bv13 5)) Red3_13
	(ite (= x (_ bv14 5)) Red3_14
	(ite (= x (_ bv15 5)) Red3_15
	(ite (= x (_ bv16 5)) Red3_16
	(ite (= x (_ bv17 5)) Red3_17
	(ite (= x (_ bv18 5)) Red3_18
	(ite (= x (_ bv19 5)) Red3_19
	(ite (= x (_ bv20 5)) Red3_20
	(ite (= x (_ bv21 5)) Red3_21
	(ite (= x (_ bv22 5)) Red3_22
	(ite (= x (_ bv23 5)) Red3_23 empty
))))))))))))))))))))))))
)
;
;pick a shift coefficient
;
(define-fun Blu0shft () (_ BitVec 100) (bvlshr (Blu0 Blu0xyz) Blu0shr))
(define-fun Blu1shft () (_ BitVec 100) (bvlshr (Blu1 Blu1xyz) Blu1shr))
(define-fun Blu2shft () (_ BitVec 100) (bvlshr (Blu2 Blu2xyz) Blu2shr))
(define-fun Blu3shft () (_ BitVec 100) (bvlshr (Blu3 Blu3xyz) Blu3shr))
(define-fun Wte0shft () (_ BitVec 100) (bvlshr (Wte0 Wte0xyz) Wte0shr))
(define-fun Wte1shft () (_ BitVec 100) (bvlshr (Wte1 Wte1xyz) Wte1shr))
(define-fun Wte2shft () (_ BitVec 100) (bvlshr (Wte2 Wte2xyz) Wte2shr))
(define-fun Wte3shft () (_ BitVec 100) (bvlshr (Wte3 Wte3xyz) Wte3shr))
(define-fun Wte4shft () (_ BitVec 100) (bvlshr (Wte4 Wte4xyz) Wte4shr))
(define-fun Red0shft () (_ BitVec 100) (bvlshr (Red0 Red0xyz) Red0shr))
(define-fun Red1shft () (_ BitVec 100) (bvlshr (Red1 Red1xyz) Red1shr))
(define-fun Red2shft () (_ BitVec 100) (bvlshr (Red2 Red2xyz) Red2shr))
(define-fun Red3shft () (_ BitVec 100) (bvlshr (Red3 Red3xyz) Red3shr))

;Pieces don't colide with borders
(assert	(= empty (bvand grid Blu0shft)))
(assert (= empty (bvand grid Blu1shft)))
(assert (= empty (bvand grid Blu2shft)))
(assert	(= empty (bvand grid Blu3shft)))
(assert	(= empty (bvand grid Wte0shft)))
(assert	(= empty (bvand grid Wte1shft)))
(assert	(= empty (bvand grid Wte2shft)))
(assert	(= empty (bvand grid Wte3shft)))
(assert	(= empty (bvand grid Wte4shft)))
(assert	(= empty (bvand grid Red0shft)))
(assert	(= empty (bvand grid Red1shft)))
(assert	(= empty (bvand grid Red2shft)))
(assert	(= empty (bvand grid Red3shft)))

; Pieces don't colide with each other
(assert (= empty (bvand Blu0shft Blu1shft)))
(assert (= empty (bvand Blu0shft Blu2shft)))
(assert (= empty (bvand Blu0shft Blu3shft)))
(assert (= empty (bvand Blu0shft Wte0shft)))
(assert (= empty (bvand Blu0shft Wte1shft)))
(assert (= empty (bvand Blu0shft Wte2shft)))
(assert (= empty (bvand Blu0shft Wte3shft)))
(assert (= empty (bvand Blu0shft Wte4shft)))
(assert (= empty (bvand Blu0shft Red0shft)))
(assert (= empty (bvand Blu0shft Red1shft)))
(assert (= empty (bvand Blu0shft Red2shft)))
(assert (= empty (bvand Blu0shft Red3shft)))

(assert (= empty (bvand Blu1shft Blu0shft)))
(assert (= empty (bvand Blu1shft Blu2shft)))
(assert (= empty (bvand Blu1shft Blu3shft)))
(assert (= empty (bvand Blu1shft Wte0shft)))
(assert (= empty (bvand Blu1shft Wte1shft)))
(assert (= empty (bvand Blu1shft Wte2shft)))
(assert (= empty (bvand Blu1shft Wte3shft)))
(assert (= empty (bvand Blu1shft Wte4shft)))
(assert (= empty (bvand Blu1shft Red0shft)))
(assert (= empty (bvand Blu1shft Red1shft)))
(assert (= empty (bvand Blu1shft Red2shft)))
(assert (= empty (bvand Blu1shft Red3shft)))

(assert (= empty (bvand Blu2shft Blu0shft)))
(assert (= empty (bvand Blu2shft Blu1shft)))
(assert (= empty (bvand Blu2shft Blu3shft)))
(assert (= empty (bvand Blu2shft Wte0shft)))
(assert (= empty (bvand Blu2shft Wte1shft)))
(assert (= empty (bvand Blu2shft Wte2shft)))
(assert (= empty (bvand Blu2shft Wte3shft)))
(assert (= empty (bvand Blu2shft Wte4shft)))
(assert (= empty (bvand Blu2shft Red0shft)))
(assert (= empty (bvand Blu2shft Red1shft)))
(assert (= empty (bvand Blu2shft Red2shft)))
(assert (= empty (bvand Blu2shft Red3shft)))

(assert (= empty (bvand Blu3shft Blu0shft)))
(assert (= empty (bvand Blu3shft Blu1shft)))
(assert (= empty (bvand Blu3shft Blu2shft)))
(assert (= empty (bvand Blu3shft Wte0shft)))
(assert (= empty (bvand Blu3shft Wte1shft)))
(assert (= empty (bvand Blu3shft Wte2shft)))
(assert (= empty (bvand Blu3shft Wte3shft)))
(assert (= empty (bvand Blu3shft Wte4shft)))
(assert (= empty (bvand Blu3shft Red0shft)))
(assert (= empty (bvand Blu3shft Red1shft)))
(assert (= empty (bvand Blu3shft Red2shft)))
(assert (= empty (bvand Blu3shft Red3shft)))

(assert (= empty (bvand Red0shft Blu0shft)))
(assert (= empty (bvand Red0shft Blu1shft)))
(assert (= empty (bvand Red0shft Blu2shft)))
(assert (= empty (bvand Red0shft Blu3shft)))
(assert (= empty (bvand Red0shft Wte0shft)))
(assert (= empty (bvand Red0shft Wte1shft)))
(assert (= empty (bvand Red0shft Wte2shft)))
(assert (= empty (bvand Red0shft Wte3shft)))
(assert (= empty (bvand Red0shft Wte4shft)))
(assert (= empty (bvand Red0shft Red1shft)))
(assert (= empty (bvand Red0shft Red2shft)))
(assert (= empty (bvand Red0shft Red3shft)))

(assert (= empty (bvand Red1shft Blu0shft)))
(assert (= empty (bvand Red1shft Blu1shft)))
(assert (= empty (bvand Red1shft Blu2shft)))
(assert (= empty (bvand Red1shft Blu3shft)))
(assert (= empty (bvand Red1shft Wte0shft)))
(assert (= empty (bvand Red1shft Wte1shft)))
(assert (= empty (bvand Red1shft Wte2shft)))
(assert (= empty (bvand Red1shft Wte3shft)))
(assert (= empty (bvand Red1shft Wte4shft)))
(assert (= empty (bvand Red1shft Red0shft)))
(assert (= empty (bvand Red1shft Red2shft)))
(assert (= empty (bvand Red1shft Red3shft)))

(assert (= empty (bvand Red2shft Blu0shft)))
(assert (= empty (bvand Red2shft Blu1shft)))
(assert (= empty (bvand Red2shft Blu2shft)))
(assert (= empty (bvand Red2shft Blu3shft)))
(assert (= empty (bvand Red2shft Wte0shft)))
(assert (= empty (bvand Red2shft Wte1shft)))
(assert (= empty (bvand Red2shft Wte2shft)))
(assert (= empty (bvand Red2shft Wte3shft)))
(assert (= empty (bvand Red2shft Wte4shft)))
(assert (= empty (bvand Red2shft Red1shft)))
(assert (= empty (bvand Red2shft Red0shft)))
(assert (= empty (bvand Red2shft Red3shft)))

(assert (= empty (bvand Red3shft Blu0shft)))
(assert (= empty (bvand Red3shft Blu1shft)))
(assert (= empty (bvand Red3shft Blu2shft)))
(assert (= empty (bvand Red3shft Blu3shft)))
(assert (= empty (bvand Red3shft Wte0shft)))
(assert (= empty (bvand Red3shft Wte1shft)))
(assert (= empty (bvand Red3shft Wte2shft)))
(assert (= empty (bvand Red3shft Wte3shft)))
(assert (= empty (bvand Red3shft Wte4shft)))
(assert (= empty (bvand Red3shft Red1shft)))
(assert (= empty (bvand Red3shft Red2shft)))
(assert (= empty (bvand Red3shft Red0shft)))

(assert (= empty (bvand Wte0shft Blu0shft)))
(assert (= empty (bvand Wte0shft Blu1shft)))
(assert (= empty (bvand Wte0shft Blu2shft)))
(assert (= empty (bvand Wte0shft Blu3shft)))
(assert (= empty (bvand Wte0shft Wte1shft)))
(assert (= empty (bvand Wte0shft Wte2shft)))
(assert (= empty (bvand Wte0shft Wte3shft)))
(assert (= empty (bvand Wte0shft Wte4shft)))
(assert (= empty (bvand Wte0shft Red0shft)))
(assert (= empty (bvand Wte0shft Red1shft)))
(assert (= empty (bvand Wte0shft Red2shft)))
(assert (= empty (bvand Wte0shft Red3shft)))

(assert (= empty (bvand Wte1shft Blu0shft)))
(assert (= empty (bvand Wte1shft Blu1shft)))
(assert (= empty (bvand Wte1shft Blu2shft)))
(assert (= empty (bvand Wte1shft Blu3shft)))
(assert (= empty (bvand Wte1shft Wte0shft)))
(assert (= empty (bvand Wte1shft Wte2shft)))
(assert (= empty (bvand Wte1shft Wte3shft)))
(assert (= empty (bvand Wte1shft Wte4shft)))
(assert (= empty (bvand Wte1shft Red0shft)))
(assert (= empty (bvand Wte1shft Red1shft)))
(assert (= empty (bvand Wte1shft Red2shft)))
(assert (= empty (bvand Wte1shft Red3shft)))

(assert (= empty (bvand Wte2shft Blu0shft)))
(assert (= empty (bvand Wte2shft Blu1shft)))
(assert (= empty (bvand Wte2shft Blu2shft)))
(assert (= empty (bvand Wte2shft Blu3shft)))
(assert (= empty (bvand Wte2shft Wte1shft)))
(assert (= empty (bvand Wte2shft Wte0shft)))
(assert (= empty (bvand Wte2shft Wte3shft)))
(assert (= empty (bvand Wte2shft Wte4shft)))
(assert (= empty (bvand Wte2shft Red0shft)))
(assert (= empty (bvand Wte2shft Red1shft)))
(assert (= empty (bvand Wte2shft Red2shft)))
(assert (= empty (bvand Wte2shft Red3shft)))

(assert (= empty (bvand Wte3shft Blu0shft)))
(assert (= empty (bvand Wte3shft Blu1shft)))
(assert (= empty (bvand Wte3shft Blu2shft)))
(assert (= empty (bvand Wte3shft Blu3shft)))
(assert (= empty (bvand Wte3shft Wte1shft)))
(assert (= empty (bvand Wte3shft Wte2shft)))
(assert (= empty (bvand Wte3shft Wte0shft)))
(assert (= empty (bvand Wte3shft Wte4shft)))
(assert (= empty (bvand Wte3shft Red0shft)))
(assert (= empty (bvand Wte3shft Red1shft)))
(assert (= empty (bvand Wte3shft Red2shft)))
(assert (= empty (bvand Wte3shft Red3shft)))

(assert (= empty (bvand Wte4shft Blu0shft)))
(assert (= empty (bvand Wte4shft Blu1shft)))
(assert (= empty (bvand Wte4shft Blu2shft)))
(assert (= empty (bvand Wte4shft Blu3shft)))
(assert (= empty (bvand Wte4shft Wte1shft)))
(assert (= empty (bvand Wte4shft Wte2shft)))
(assert (= empty (bvand Wte4shft Wte3shft)))
(assert (= empty (bvand Wte4shft Wte0shft)))
(assert (= empty (bvand Wte4shft Red0shft)))
(assert (= empty (bvand Wte4shft Red1shft)))
(assert (= empty (bvand Wte4shft Red2shft)))
(assert (= empty (bvand Wte4shft Red3shft)))

;combine all pieces together
(assert	(= fullGrid (bvor grid
					(bvor Blu0shft(bvor Blu1shft(bvor Blu2shft(bvor Blu3shft
					(bvor Wte0shft(bvor Wte1shft(bvor Wte2shft (bvor Wte3shft (bvor Wte4shft 
					(bvor Red0shft(bvor Red1shft(bvor Red2shft Red3shft))))))))))))
	))
)
(check-sat)
(get-model)
(exit)


